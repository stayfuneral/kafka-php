version: "3.8"

services:

  zookeeper-db:
    image: bitnami/zookeeper:latest
    hostname: zookeeper-db
    container_name: zookeeper-db
    restart: always
    ports:
      - "21810:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka-broker:
    image: bitnami/kafka:latest
    hostname: kafka-broker
    container_name: kafka-broker
    restart: always
    ports:
      - "9091:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper-db

  kafka-ui-web:
    image: provectuslabs/kafka-ui
    hostname: kafka-ui-web
    container_name: kafka-ui-web
    ports:
      - "8088:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181
      - KAFKA_CLUSTERS_0_READONLY=false
    depends_on:
      - kafka-broker

  kafka-fpm:
    container_name: kafka-fpm
    hostname: kafka-fpm
    build:
      context: ./docker/php
      args:
        - PUID=${PUID}
        - PGID=${PGID}
    restart: unless-stopped
    volumes:
      - ./app:/data
    ports:
      - '9000:9000'
    depends_on:
      - kafka-broker
      - mariadb

  mariadb:
    image: mariadb
    container_name: mariadb
    hostname: mariadb
    restart: unless-stopped
    ports:
      - "3306:3306"
    volumes:
      - ./db:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: '123'
      MYSQL_DATABASE: 'kafka-bx'


  nginx-web:
    container_name: nginx-web
    hostname: nginx-web
    restart: always
    build:
      context: ./docker/nginx
    volumes:
      - ./app:/data:rw
      - ./logs/nginx:/var/log/nginx
    ports:
      - ${NGINX_HOST_HTTP_PORT}:80
    depends_on:
      - kafka-fpm

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
